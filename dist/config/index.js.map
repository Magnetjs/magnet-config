{"version":3,"sources":["config/index.js"],"names":[],"mappings":";;AAAA,IAAI,IAAI,GAAG,OAAO,CAAC,GAAG,EAAE,CAAC;AACzB,IAAI,UAAU,GAAM,IAAI,YAAS,CAAC;;AAElC,MAAM,CAAC,OAAO,GAAG;AACf,OAAK,EAAE;AACL,OAAG,EAAE,IAAI;AACT,UAAM,EAAE,EAAE;AACV,SAAK,EAAE;AACL,YAAM,EAAK,IAAI,gBAAa;KAC7B;AACD,UAAM,EAAE;AACN,UAAI,EAAE,UAAU;AAChB,YAAM,EAAE,UAAU,GAAG,SAAS;AAC9B,gBAAU,EAAE,UAAU,GAAG,cAAc;AACvC,WAAK,EAAE,UAAU,GAAG,SAAS;AAC7B,eAAS,EAAE,UAAU,GAAG,aAAa;AACrC,SAAG,EAAE,MAAM;AACX,WAAK,EAAE,UAAU,GAAG,SAAS;AAC7B,YAAM,EAAE,UAAU,GAAG,UAAU;AAC/B,UAAI,EAAE,UAAU,GAAG,QAAQ;AAC3B,SAAG,EAAE,UAAU,GAAG,MAAM;KACzB;;AAED,UAAM,EAAE,UAAU;GACnB;;AAED,KAAG,EAAE;;;;;;;;GAQJ;;AAED,QAAM,EAAE;AACN,QAAI,EAAE,IAAI;GAOX;;;;;;;;AAED,YAAU,EAAE;;;;;;;;;;;;;;;;;;;;;;GAsBX;;;;;;;;;;;;;;;;;;;;;;;;AAwBD,QAAM,EAAE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GAgEP;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqED,OAAK,EAAE;;;;;;;;;;;;;;GAcN;;;AAGD,IAAE,EAAE;;;;;;;;;;;;;;;;GAgBH;;AAED,UAAQ,EAAE;AACR,OAAG,EAAE,IAAI;GACV;;;AAGD,SAAO,EAAE,EAAE;CACZ,CAAC","file":"config/index.js","sourcesContent":["let base = process.cwd();\nlet serverPath = `${base}/server`;\n\nmodule.exports = {\n  paths: {\n    app: base,\n    client: '',\n    share: {\n      schema: `${base}/isomorphic`\n    },\n    server: {\n      base: serverPath,\n      config: serverPath + '/config',\n      controller: serverPath + '/controllers',\n      queue: serverPath + '/queues',\n      scheduler: serverPath + '/schedulers',\n      log: 'logs',\n      model: serverPath + '/models',\n      module: serverPath + '/modules',\n      view: serverPath + '/views',\n      acl: serverPath + '/acl',\n    },\n\n    policy: 'policies'\n  },\n\n  log: {\n    // default: 'winston',\n    //\n    // winston: {\n    //   module: 'koala-logger',\n    //   levels: {},\n    //   colors: {}\n    // }\n  },\n\n  server: {\n    port: 3000,\n    // key: fs.readFileSync('./keys/server.key'),\n    // cert: fs.readFileSync('./keys/server.crt'),\n    // ca: fs.readFileSync('./keys/server.csr')\n\n    // plain: true,\n    // ssl: false\n  },\n\n  connection: {\n    // mongodb: {\n    //     default: {\n    //         host: 'localhost',\n    //         port: 27017,\n    //         database: 'koalist'\n    //     }\n    // },\n\n    // redis: {\n    //     default: {\n    //         host: 'localhost',\n    //         port: 6379\n    //     }\n    // },\n\n    // cayley: {\n    //   default: {\n    //     host: 'localhost',\n    //     port: 64210\n    //   }\n    // }\n  },\n\n  // eventStore: {\n  //   default: 'eventstore',\n  //\n  //   eventstore: {\n  //     database: 'eventstore',\n  //     eventsCollectionName: 'events',\n  //     snapshotsCollectionName: 'snapshots'\n  //   }\n  // },\n  //\n  // search: {\n  //   default: 'elasticsearch',\n  //\n  //   elasticsearch: {\n  //     host: 'http://localhost:9200',\n  //     // connectionClass: 'http',\n  //     // apiVersion: 'master',\n  //     // sniffOnStart: true,\n  //     // sniffInterval: 60000\n  //   }\n  // },\n\n  models: {\n    // http://mongoosejs.com/docs/connections.html\n    // mongoose: {\n    //   enable: false,\n    //   host: 'localhost',\n    //   port: 27017,\n    //   database: 'koalist',\n    //   options: {\n    //     // db: {\n    //     //     native_parser: true\n    //     // },\n    //     // server: {\n    //     //     poolSize: 5\n    //     // },\n    //     // replset: {\n    //     //     rs_name: 'myReplicaSetName'\n    //     // },\n    //     // user: 'myUserName',\n    //     // pass: 'myPassword'\n    //   }\n    // },\n\n    // sequelize: {\n    //   enable: false\n    // },\n\n    // waterline: {\n    //   enable: false,\n    //\n    //   // Setup Adapters\n    //   // Creates named adapters that have have been required\n    //   adapters: {\n    //     // 'default': 'mongo',\n    //     // mongo: {\n    //     //     module: 'sails-mongo',\n    //     //     host: 'localhost',\n    //     //     port: 27017,\n    //     //     user: 'username',\n    //     //     password: 'password',\n    //     //     database: 'your mongo db name here'\n    //     // }\n    //     // 'default': diskAdapter,\n    //     // disk: diskAdapter,\n    //     // mysql: mysqlAdapter\n    //   },\n    //\n    //   // Build Connections Config\n    //   // Setup connections using the named adapter configs\n    //   connections: {\n    //     // myLocalDisk: {\n    //     //     adapter: 'disk'\n    //     // },\n    //\n    //     // mongodb: {\n    //     //   adapter: 'mongo',\n    //     //   host: 'localhost',\n    //     //   database: 'foobar'\n    //     // }\n    //   },\n    //\n    //   defaults: {\n    //     migrate: 'alter'\n    //   }\n    // }\n  },\n\n  // Run UI application for Kue\n  // queue: {\n  //   default: 'kue',\n  //\n  //   kue: {\n  //     type: 'kue',\n  //     ui: true,\n  //     uiPort: 3000\n  //   }\n  // },\n\n  // scheduler: {\n  //   default: 'agenda',\n  //\n  //   agenda: {\n  //     host: '127.0.0.1',\n  //     port: 27017,\n  //     database: 'koalist',\n  //     collection: 'agendaJobs'\n  //   }\n  // },\n\n  // session: {\n  //   keys: []\n  // },\n\n  // cache: {\n  //   default: 'cache',\n  //\n  //   cache: {\n  //     module: 'koala-cache',\n  //     type: 'redis', // redis, mongodb, memory\n  //     host: 'localhost',\n  //     port: 6379\n  //   }\n  // },\n\n  // Type: SMTP, DKIM, Direct\n  //\n  // Custom\n  // var nodemailer = require('nodemailer');\n  // // Pipes all messages to stdout\n  // function MyTransport(options) {\n  //     this.options = options;\n  // }\n  //\n  // MyTransport.prototype.sendMail = function(emailMessage, callback) {\n  //     console.log('Envelope: ', emailMessage.getEnvelope());\n  //     emailMessage.pipe(process.stdout);\n  //     emailMessage.on('error', function(err) {\n  //         callback(err);\n  //     });\n  //     emailMessage.on('end', function() {\n  //         callback(null, {\n  //             messageId: emailMessage._messageId\n  //         });\n  //     });\n  //     // everything set up, start streaming\n  //     emailMessage.streamMessage();\n  // };\n  //\n  // email: {\n  //     type: MyTransport,\n  //     options: {\n  //          ...\n  //     }\n  // }\n  email: {\n  //   default: 'mailer',\n  //\n  //   mailer: {\n  //     module: 'koala-mailer',\n  //     type: 'SMTP',\n  //     options: {\n  //       service: '',\n  //       auth: {\n  //         user: '',\n  //         pass: ''\n  //       }\n  //     }\n  //   }\n  },\n\n  // Message queue\n  mq: {\n    // default: 'rabbitmq',\n    //\n    // rabbitmq: {\n    //   host: 'localhost',\n    //   port: 5672,\n    //   login: 'guest',\n    //   password: 'guest',\n    //   connectionTimeout: 0,\n    //   authMechanism: 'AMQPLAIN',\n    //   vhost: '/',\n    //   noDelay: true,\n    //   ssl: {\n    //     enabled: false\n    //   }\n    // }\n  },\n\n  policies: {\n    '*': true\n  },\n\n  // Config for specific module, module without category\n  modules: {}\n};\n"],"sourceRoot":"/source/"}